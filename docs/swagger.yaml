basePath: /api/v1
definitions:
  errorhandler.ErrorHandler:
    properties:
      error:
        type: boolean
      message:
        type: string
    type: object
  models.Address:
    properties:
      address:
        type: string
      city:
        type: string
      country:
        type: string
      created_at:
        type: string
      id:
        type: integer
      state:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
      zip_code:
        type: string
    type: object
  models.Cart:
    properties:
      checkout:
        type: boolean
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      price:
        type: string
      product_id:
        type: integer
      quantity:
        type: integer
      total:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    required:
    - id
    - price
    - product_id
    - quantity
    - user_id
    type: object
  models.Product:
    properties:
      category:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
      updated_at:
        type: string
    type: object
  models.UserLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.UserRequest:
    properties:
      email:
        type: string
      name:
        maxLength: 30
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
      phone:
        type: string
    required:
    - email
    - name
    - password
    - phone
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server using Echo.
  title: Ecommerce API Swagger
  version: "1.0"
paths:
  /address/{id}:
    delete:
      consumes:
      - application/json
      description: Removes a specified address associated with a user
      parameters:
      - description: Address information containing address Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Address successfully deleted
        "400":
          description: Invalid input or deletion error
      summary: Delete a user's address
      tags:
      - addresses
    get:
      consumes:
      - application/json
      description: Retrieves a specific address associated with the authenticated
        user
      parameters:
      - description: Address ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Address details
          schema:
            $ref: '#/definitions/models.Address'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/errorhandler.ErrorHandler'
        "404":
          description: No data found
          schema:
            type: string
      summary: Get a user's address
      tags:
      - addresses
  /addresses:
    get:
      consumes:
      - application/json
      description: Retrieve all addresses for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: List of user addresses
          schema:
            items:
              $ref: '#/definitions/models.Address'
            type: array
        "500":
          description: Error message
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get user addresses
      tags:
      - addresses
  /buy-cart:
    get:
      consumes:
      - application/json
      description: Retrieve all items in the user's cart
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Cart'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorhandler.ErrorHandler'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorhandler.ErrorHandler'
      summary: Get items from cart
      tags:
      - cart
  /cart:
    delete:
      consumes:
      - application/json
      description: Remove a product from the user's cart
      parameters:
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: integer
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorhandler.ErrorHandler'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorhandler.ErrorHandler'
      summary: Remove product from cart
      tags:
      - cart
    get:
      consumes:
      - application/json
      description: Retrieve all items in the user's cart
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Cart'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorhandler.ErrorHandler'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorhandler.ErrorHandler'
      summary: Get items from cart
      tags:
      - cart
    post:
      consumes:
      - application/json
      description: Add a product to the user's cart
      parameters:
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: integer
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: Cart object
        in: body
        name: cart
        required: true
        schema:
          $ref: '#/definitions/models.Cart'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorhandler.ErrorHandler'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorhandler.ErrorHandler'
      summary: Add product to cart
      tags:
      - cart
  /login:
    post:
      consumes:
      - application/json
      description: User login
      parameters:
      - description: Login object
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login
      tags:
      - auth
  /products:
    get:
      consumes:
      - application/json
      description: Search products by query (optional)
      parameters:
      - description: query string for searching products
        in: query
        name: query
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Products / Search products
      tags:
      - products
  /products/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves a product from the database based on the provided ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad request - Invalid or missing product ID
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorhandler.ErrorHandler'
      summary: Get product by ID
      tags:
      - products
  /signup:
    post:
      consumes:
      - application/json
      description: User signup
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Returns success message
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/errorhandler.ErrorHandler'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/errorhandler.ErrorHandler'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errorhandler.ErrorHandler'
      summary: singup
      tags:
      - auth
  /verify-email:
    get:
      consumes:
      - application/json
      description: Verify email format
      parameters:
      - description: Email address
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Verify Email
      tags:
      - auth
swagger: "2.0"
